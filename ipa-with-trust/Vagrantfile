# -*- mode: ruby -*-
# vi: set ft=ruby :

SERVER_HOSTNAME="server.ipa.test"
SERVER_IP_ADDRESS="192.168.122.100"

CLIENT_HOSTNAME="client.ipa.test"
CLIENT_IP_ADDRESS="192.168.122.110"

FREEIPA_SRC="/home/jhrozek/devel/freeipa"
SSSD_SRC="/home/jhrozek/devel/sssd"

AD_FOREST="win.trust.test"
AD_NETBIOS="WIN"
AD_DC_HOSTNAME="dc"
AD_DC_FQDN="dc.win.trust.test"
AD_IP_ADDRESS="192.168.122.166"

Vagrant.configure(2) do |config|

  config.vm.define "server" do |server|
      server.vm.box = "fedora/28-cloud-base"
      server.vm.network "private_network", ip: "#{SERVER_IP_ADDRESS}"
      server.vm.hostname = "#{SERVER_HOSTNAME}"

      server.vm.synced_folder "#{SSSD_SRC}", "/sssd", type: "sshfs", sshfs_opts_append: "-o cache=no"

      server.vm.provider :libvirt do |domain|
          domain.memory = 2048
          domain.storage_pool_name = 'jhrozek'
      end
  end

  config.vm.define "client" do |client|
      client.vm.box = "fedora/28-cloud-base"
      client.vm.network "private_network", ip: "#{CLIENT_IP_ADDRESS}"
      client.vm.hostname = "#{CLIENT_HOSTNAME}"

      client.vm.synced_folder "#{SSSD_SRC}", "/sssd", type: "sshfs", sshfs_opts_append: "-o cache=no"

      client.vm.provider :libvirt do |domain|
          domain.memory = 1024
          domain.cpus = 2
          domain.storage_pool_name = 'jhrozek'
      end
  end

  config.vm.define "ad_dc" do |ad_dc|
      ad_dc.vm.box = "peru/windows-server-2016-standard-x64-eval"
      ad_dc.vm.network "private_network", ip: "#{AD_IP_ADDRESS}"
      ad_dc.vm.hostname = "#{AD_DC_HOSTNAME}"
      ad_dc.vm.guest = :windows
      ad_dc.vm.communicator = "winrm"
      ad_dc.winrm.username = ".\\Administrator"

      ad_dc.vm.provider :libvirt do |domain|
          domain.memory = 2048
          domain.storage_pool_name = 'jhrozek'
      end
  end

  config.vm.provision "ansible" do |ansible|
      ansible.playbook = "../ansible/ipa_with_trusts.yml"

      ansible.host_vars = {
                  "server" => {
                      "ansible_python_interpreter" => "/usr/bin/python3",
		      "verbose" => "vvv",
                  },
                  "client" => {
                      "ansible_python_interpreter" => "/usr/bin/python3",
                  },
                  "ad_dc" => {
                      "ansible_winrm_server_cert_validation" => "ignore",
                      "ansible_user" => "Administrator",
                      "ansible_password" => "vagrant",
                  },
      }

      ansible.groups = {
          "ipa_trust_server" => ["server"],
          "ipa_trust_client" => ["client"],
          "ad_dc" => ["ad_dc"],
      }

      ansible.extra_vars = {
            client_fqdn: "#{CLIENT_HOSTNAME}",
            client_ip_address: "#{CLIENT_IP_ADDRESS}",
            server_fqdn: "#{SERVER_HOSTNAME}",
            server_ip_address: "#{SERVER_IP_ADDRESS}",
            ad_forest: "#{AD_FOREST}",
            ad_netbios: "#{AD_NETBIOS}",
            ad_forwarder: "#{AD_IP_ADDRESS}",
	    ad_forest_mode: 'WinThreshold',
	    ad_domain_mode: 'WinThreshold',
	    ad_admin_password:  'Secret123',
            ipa_domain: 'ipa.test',
            ipa_password: 'blablabla',
            server_shortname: 'server',
            forwarder: '192.168.122.1' 
      }
  end
end
